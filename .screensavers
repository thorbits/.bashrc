#!/bin/bash
#
#	_______
#	\_   _/
#	  |_|horbits 
#
#	My bash config


#######################################################
#
#######################################################

####
matrix1() { 
	echo -e "\e[32m"  # Set text color to green
	while :; do
		for _ in {1..50}; do  # Repeat the animation 50 times for each row
			for _ in {1..160}; do
				r=$((RANDOM % 2))
				if [[ $((RANDOM % 5)) == 1 ]]; then
					if [[ $((RANDOM % 4)) == 1 ]]; then
						v+="\e[1m $r "  # Bold characters
					else
						v+="\e[2m $r "  # Dim characters
					fi
				else
					v+=" "
				fi
			done
			echo -e "$v"
			v=""
		done
		# Check for ESC key press
		read -n 1 -s -t 0.1 key
		if [[ $key == $'\e' ]]; then
			clear
			break
		fi
		sleep 0.2  # Adjust to desired speed	
	done
}

####
matrix2() { 
	perl -MTerm::ReadKey -e '
		use Term::ANSIColor;
		$|++;
		ReadMode 4;  # Turn off buffering

		while (1) {
			print color("green"), " " x (rand(35) + 1), int(rand(2)), color("reset");
			select(undef, undef, undef, 0.005);  # Adjust for sleep duration

			if (defined($key = ReadKey(-1))) {
				if (ord($key) == 27) {
					last;
				}
			}
		}

		ReadMode 0;  # Restore original terminal mode
		print "\n";  # Print a newline to clear any residual text
	'
}

####
matrix3() { 
	clear
	echo -ne "\e[32m"
	while true
	do
		echo -ne "\e[$(($RANDOM % 2 + 1))m"
		tr -c "[:alnum:][:punct:]" " " < /dev/urandom | dd count=1 bs=50 2> /dev/null
		# Check for ESC key press
		read -n 1 -s -t 0.1 key
		if [[ $key == $'\e' ]]; then
			clear
			break
		fi
	done
}

####
matrix4() { 
	clear
	while true
	do
		COL=$((RANDOM % $(tput cols)))
		for ((i = 0; i < COL; i++)); do
			tput cup $i $COL
			echo -e "\033[0;32m" $(cat /dev/urandom | head -1 | cut -c1-1) 2>/dev/null
		done
		# Check for ESC key press
		read -n 1 -s -t 0.1 key
		if [[ $key == $'\e' ]]; then
			clear
			break
		fi
		sleep 0.2  # Adjust to desired speed
	done
}

####
matrix5() { 
	while tue
	do
		tr -c "[:alnum:][:punct:]" " " < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR="1;32" grep --color "[^ ]"
		# Check for ESC key press
		read -n 1 -s -t 0.1 key
		if [[ $key == $'\e' ]]; then
			clear
			break
		fi
		sleep 0.1 # Adjust to desired speed
	done
}

####
matrix6() { 
    while true
do
echo -e "\033[2J\033[?25l"; R=`tput lines` C=`tput cols`;: $[R--] ; while true 
do ( e=echo\ -e s=sleep j=$[RANDOM%C] d=$[RANDOM%R];for i in `eval $e {1..$R}`;
do c=`printf '\\\\0%o' $[RANDOM%57+33]` ### http://bruxy.regnet.cz/web/linux ###
$e "\033[$[i-1];${j}H\033[32m$c\033[$i;${j}H\033[37m"$c; $s 0.1;if [ $i -ge $d ]
then $e "\033[$[i-d];${j}H ";fi;done;for i in `eval $e {$[i-d]..$R}`; #[mat!rix]
do echo -e "\033[$i;${j}f ";$s 0.1;done)& sleep 0.05;done
}

####
xlights() { 
	clear
	while :
	do
		echo -ne "\033[$((1+RANDOM%LINES));$((1+RANDOM%COLUMNS))H\033[$((RANDOM%2));3$((RANDOM%8))m$((RANDOM%10))"
		# Check for ESC key press
		read -n 1 -s -t 0.1 key
		if [[ $key == $'\e' ]]; then
			clear
			break
		fi
		sleep 0.01 # Adjust to desired speed
	done
}

